services:
  # Orion-LD is the context broker
  orion:
    image: quay.io/fiware/orion-ld:${ORIONLD_VERSION}
    environment:
    # This option is for enabling the Temporal Representation of Entities
      - ORIONLD_TROE=TRUE
      - ORIONLD_TROE_USER=orion
      - ORIONLD_TROE_PWD=orion
      - ORIONLD_TROE_HOST=timescale
      - ORIONLD_MONGO_HOST=mongo
    hostname: orion
    container_name: fiware-orion
    depends_on:
      mongo-db:
        condition: service_healthy
      timescale:
        condition: service_healthy
    networks:
      - default
    expose:
      - "${ORIONLD_PORT}"
    ports:
      - "${ORIONLD_PORT}:${ORIONLD_PORT}" # localhost:1026
    command: -dbhost mongo-db -logLevel DEBUG
    healthcheck:
      test: curl --fail -s http://orion:${ORIONLD_PORT}/version || exit 1
      interval: 5s

  mintaka:
    image: fiware/mintaka:${MINTAKA_VERSION}
    hostname: mintaka
    container_name: mintaka
    environment:
      - DATASOURCES_DEFAULT_HOST=timescale
      - DATASOURCES_DEFAULT_USERNAME=orion
      - DATASOURCES_DEFAULT_PASSWORD=orion
      - DATASOURCES_DEFAULT_DATABASE=orion
      - ENDPOINTS_ALL_PORT=8081
      - MICRONAUT_SERVER_PORT=8082
      - ENDPOINTS_HEALTH_ENABLED=true
      - LOGGERS_LEVELS_ROOT=DEBUG
    depends_on:
      orion:
        condition: service_healthy
      timescale:
        condition: service_healthy
    networks:
      - default
    ports:
      - "8027:8082"
      - "8028:8081"
    command: -logLevel DEBUG

  iot-agent:
  image: quay.io/fiware/iotagent-json:latest
  hostname: iot-agent
  container_name: fiware-iot-agent
  depends_on:
      - mongo-db
  networks:
      - default
  expose:
      - '${IOTA_NORTH_PORT}' #port 4041
      - '${IOTA_SOUTH_PORT}' #port 7896
  ports:
      - '${IOTA_NORTH_PORT}:${IOTA_NORTH_PORT}'
      - '${IOTA_SOUTH_PORT}:${IOTA_SOUTH_PORT}'
  environment:
      - IOTA_CB_HOST=orion
      - IOTA_CB_PORT=1026
      - IOTA_NORTH_PORT=${IOTA_NORTH_PORT}
      - IOTA_REGISTRY_TYPE=mongodb
      - IOTA_LOG_LEVEL=DEBUG
      - IOTA_TIMESTAMP=true
      - IOTA_CB_NGSI_VERSION=ld
      - IOTA_AUTOCAST=true
      - IOTA_MONGO_HOST=mongo-db
      - IOTA_MONGO_PORT=27017
      - IOTA_MONGO_DB=iotagentjson
      - IOTA_HTTP_PORT=${IOTA_SOUTH_PORT}
      - IOTA_PROVIDER_URL=http://iot-agent:4041
      #- IOTA_DEFAULT_RESOURCE=/iot/json
      - IOTA_JSON_LD_CONTEXT=https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld #The location of the @context file used to define the device data models
      - IOTA_FALLBACK_TENANT=openiot #The tenant to use if no explicit tenant has been received from communications
      - IOTA_MQTT_HOST=mosquitto
      - IOTA_MQTT_PORT=1883


  # Databases
  mongo-db:
    image: mongo:${MONGO_DB_VERSION}
    hostname: mongo-db
    container_name: db-mongo
    expose:
      - "${MONGO_DB_PORT}"
    ports:
      - "${MONGO_DB_PORT}:${MONGO_DB_PORT}" # localhost:27017
    networks:
      - default
    volumes:
      - mongo-db:/data
    healthcheck:
      test: [ "CMD", "mongo", "--quiet", "127.0.0.1/test", "--eval", "'quit(db.runCommand({ ping: 1 }).ok ? 0 : 2)'"]
      interval: 5s

  timescale:
    image: timescale/timescaledb-postgis:${TIMESCALE_VERSION}
    hostname: timescale
    container_name: timescale
    expose:
       - "${TIMESCALE_DB_PORT}"
    ports:
      - "${TIMESCALE_DB_PORT}:${TIMESCALE_DB_PORT}" # localhost:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U orion" ]
      interval: 15s
      timeout: 15s
      retries: 5
      start_period: 60s
    environment:
      - POSTGRES_USER=orion
      - POSTGRES_PASSWORD=orion
      - POSTGRES_HOST_AUTH_METHOD=trust
    networks:
     - default

  grafana:
      image: grafana/grafana:8.5.27
      container_name: grafana
      depends_on:
        - timescale
      ports:
        - "${GRAFANA_PORT}:${GRAFANA_PORT}"
      environment:
        - GF_INSTALL_PLUGINS=orchestracities-map-panel,grafana-clock-panel,grafana-worldmap-panel
      volumes:
        - grafana:/var/lib/grafana

networks:
  default:

volumes:
  mongo-db: ~